//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbObject
{
    float4x4 matWorldViewProj;          // Offset:    0, size:   64
    float4x4 matWorld;                  // Offset:   64, size:   64
    float4x4 matWorldInverseTranspose;  // Offset:  128, size:   64
    float3  EyePos;                     // Offset:  192, size:   12
    float3  LightDir;                   // Offset:  208, size:   12
}

//
// 2 local object(s)
//
Texture2D gTexture;
SamplerState samAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 3 technique(s)
    //
    technique11 BasicTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbObject
                // {
                //
                //   float4x4 matWorldViewProj;         // Offset:    0 Size:    64
                //   float4x4 matWorld;                 // Offset:   64 Size:    64
                //   float4x4 matWorldInverseTranspose; // Offset:  128 Size:    64
                //   float3 EyePos;                     // Offset:  192 Size:    12 [unused]
                //   float3 LightDir;                   // Offset:  208 Size:    12 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbObject                          cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[11], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 4
                
                #line 35 "F:\VS2012pro\D3D11SPH\D3D11SPH\Texture.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<3:NaN:Inf>
                dp4 r2.x, r0.xyzw, cb0[4].xyzw  // vout<4:NaN:Inf>
                dp4 r2.y, r0.xyzw, cb0[5].xyzw  // vout<5:NaN:Inf>
                dp4 r2.z, r0.xyzw, cb0[6].xyzw  // vout<6:NaN:Inf>
                dp3 r0.x, v1.xyzx, cb0[8].xyzx
                dp3 r0.y, v1.xyzx, cb0[9].xyzx
                dp3 r0.z, v1.xyzx, cb0[10].xyzx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul r0.xyz, r0.wwww, r0.xyzx  // vout<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov r3.xy, v2.xyxx  // vout<10,11>
                
                #line 41
                mov o0.xyzw, r1.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r2.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r0.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r3.xyxx  // VS<10,11>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_output o0.xyzw
                
                #line 79 "F:\VS2012pro\D3D11SPH\D3D11SPH\Texture.fx"
                mov o0.xyzw, l(10.000000,10.000000,10.000000,5.000000)  // PS<0: 10f,1: 10f,2: 10f,3: 5f>
                ret 
                // Approximately 2 instruction slots used
                            
            };
        }

    }

    technique11 TransparentTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbObject
                // {
                //
                //   float4x4 matWorldViewProj;         // Offset:    0 Size:    64
                //   float4x4 matWorld;                 // Offset:   64 Size:    64
                //   float4x4 matWorldInverseTranspose; // Offset:  128 Size:    64
                //   float3 EyePos;                     // Offset:  192 Size:    12 [unused]
                //   float3 LightDir;                   // Offset:  208 Size:    12 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbObject                          cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[11], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 4
                
                #line 35 "F:\VS2012pro\D3D11SPH\D3D11SPH\Texture.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<3:NaN:Inf>
                dp4 r2.x, r0.xyzw, cb0[4].xyzw  // vout<4:NaN:Inf>
                dp4 r2.y, r0.xyzw, cb0[5].xyzw  // vout<5:NaN:Inf>
                dp4 r2.z, r0.xyzw, cb0[6].xyzw  // vout<6:NaN:Inf>
                dp3 r0.x, v1.xyzx, cb0[8].xyzx
                dp3 r0.y, v1.xyzx, cb0[9].xyzx
                dp3 r0.z, v1.xyzx, cb0[10].xyzx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul r0.xyz, r0.wwww, r0.xyzx  // vout<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov r3.xy, v2.xyxx  // vout<10,11>
                
                #line 41
                mov o0.xyzw, r1.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r2.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r0.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r3.xyxx  // VS<10,11>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_output o0.xyzw
                
                #line 79 "F:\VS2012pro\D3D11SPH\D3D11SPH\Texture.fx"
                mov o0.xyzw, l(10.000000,10.000000,10.000000,5.000000)  // PS<0: 10f,1: 10f,2: 10f,3: 5f>
                ret 
                // Approximately 2 instruction slots used
                            
            };
        }

    }

    technique11 ShadowTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbObject
                // {
                //
                //   float4x4 matWorldViewProj;         // Offset:    0 Size:    64
                //   float4x4 matWorld;                 // Offset:   64 Size:    64
                //   float4x4 matWorldInverseTranspose; // Offset:  128 Size:    64
                //   float3 EyePos;                     // Offset:  192 Size:    12 [unused]
                //   float3 LightDir;                   // Offset:  208 Size:    12 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbObject                          cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[11], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 4
                
                #line 35 "F:\VS2012pro\D3D11SPH\D3D11SPH\Texture.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<3:NaN:Inf>
                dp4 r2.x, r0.xyzw, cb0[4].xyzw  // vout<4:NaN:Inf>
                dp4 r2.y, r0.xyzw, cb0[5].xyzw  // vout<5:NaN:Inf>
                dp4 r2.z, r0.xyzw, cb0[6].xyzw  // vout<6:NaN:Inf>
                dp3 r0.x, v1.xyzx, cb0[8].xyzx
                dp3 r0.y, v1.xyzx, cb0[9].xyzx
                dp3 r0.z, v1.xyzx, cb0[10].xyzx
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul r0.xyz, r0.wwww, r0.xyzx  // vout<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov r3.xy, v2.xyxx  // vout<10,11>
                
                #line 41
                mov o0.xyzw, r1.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r2.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r0.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r3.xyxx  // VS<10,11>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_output o0.xyzw
                
                #line 79 "F:\VS2012pro\D3D11SPH\D3D11SPH\Texture.fx"
                mov o0.xyzw, l(10.000000,10.000000,10.000000,5.000000)  // PS<0: 10f,1: 10f,2: 10f,3: 5f>
                ret 
                // Approximately 2 instruction slots used
                            
            };
        }

    }

}

